apiVersion: v1
kind: Service
metadata:
 name: hero-back
 labels:
   app: hero-back
   tier: backend
   environment: dev
spec:
 type: NodePort
 selector:
   app: hero-back
 ports:
   # - protocol: TCP
   #   port: 80
   #   targetPort: 3000
   - nodePort: 30001
     port: 5000
     targetPort: 5000
     protocol: TCP
     name: http

--- 

apiVersion: v1
kind: Service
metadata:
 name: hero-front
 labels:
   app: hero-front
   tier: backend
   environment: dev
spec:
 type: NodePort
 selector:
   app: hero-front
 ports:
   # - protocol: TCP
   #   port: 80
   #   targetPort: 3000
   - nodePort: 30004
     port: 3000
     targetPort: 3000
     protocol: TCP
     name: http

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hero-back
spec:
  selector:
    matchLabels:
      app: hero-back
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: hero-back
    spec:
      containers:
      - name: hero-back
        image: jakejasminjk/hero-backend:latest
        ports:
          - containerPort: 5000
        env:
        - name: PORT
          value: "5000"
      #- name: hero-front
      #  image: jakejasminjk/hero-frontend:latest
      #  ports:
      #  - containerPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hero-front
spec:
  selector:
    matchLabels:
      app: hero-front
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: hero-front
    spec:
      containers:
      - name: hero-front
        image: jakejasminjk/hero-frontend:latest
        ports:
          - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
      #- name: hero-front
      #  image: jakejasminjk/hero-frontend:latest
      #  ports:
      #  - containerPort: 3000
